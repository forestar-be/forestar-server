datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model MachineRepair {
  id                    Int                          @id @default(autoincrement())
  first_name            String
  last_name             String
  address               String
  postal_code           String?
  city                  String?
  phone                 String
  email                 String
  machine_type_id       MachineType?                 @relation("MachineRepairMachineType", fields: [machine_type_name], references: [name], onDelete: SetNull)
  machine_type_name     String?
  repair_or_maintenance String
  robot_code            String?
  devis                 Boolean                      @default(false)
  hivernage             Boolean                      @default(false)
  fault_description     String
  warranty              Boolean?
  client_signature      String // URL or path to the PNG file in Supabase storage
  bucket_name           String // Supabase storage bucket name
  start_timer           DateTime? // null when timer stopped
  working_time_in_sec   Int                          @default(0)
  repairer_id           Repairer?                    @relation("MachineRepairRepairer", fields: [repairer_name], references: [name], onDelete: SetNull)
  repairer_name         String?
  brand_id              Brand?                       @relation("MachineRepairBrand", fields: [brand_name], references: [name], onDelete: SetNull)
  brand_name            String?
  remark                String?
  client_call_times     DateTime[]
  replaced_part_list    MachineRepairReplacedParts[]
  state                 String? // Current state of the repair (e.g., 'pending', 'in-progress', 'completed')
  image_path_list       String[] // List of URLs or paths to additional files in Supabase storage
  createdAt             DateTime                     @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      Role     @default(OPERATOR)
  createdAt DateTime @default(now())
}

enum Role {
  OPERATOR
  SUPERVISOR
  ADMIN
}

model ReplacedParts {
  name           String                       @id @unique
  price          Float                        @default(0)
  machineRepairs MachineRepairReplacedParts[]
}

model Repairer {
  name           String          @id @unique
  machineRepairs MachineRepair[] @relation("MachineRepairRepairer")
}

model Brand {
  name           String          @id @unique
  machineRepairs MachineRepair[] @relation("MachineRepairBrand")
}

model MachineType {
  name           String          @id @unique
  machineRepairs MachineRepair[] @relation("MachineRepairMachineType")
}

model Config {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
}

model MachineRepairReplacedParts {
  machineRepairId  Int
  replacedPartName String
  quantity         Int

  machineRepair MachineRepair @relation(fields: [machineRepairId], references: [id], onDelete: Cascade)
  replacedPart  ReplacedParts @relation(fields: [replacedPartName], references: [name], onDelete: Cascade)

  @@id([machineRepairId, replacedPartName])
}

// command to add migration:
// npx prisma migrate dev --name xxxxxxxx
