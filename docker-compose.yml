services:
  db:
    container_name: db
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env.docker
    volumes:
      - POSTGRES_DATA_DIR:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U POSTGRES_USER -d POSTGRES_DB']
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.docker
    environment:
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3001:3001'
    volumes:
      - SECRET_DIR:SECRET_DIR
      - LOG_DIR:/app/logs
      - IMAGES_DIR:IMAGES_BASE_DIR
    networks:
      - app_network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - PORTAINER_DATA_DIR:/data
      - PORTAINER_SSL_CERT:/certs/fullchain.pem:ro
      - PORTAINER_SSL_KEY:/certs/privkey.pem:ro
    ports:
      - '9443:9443'
    networks:
      - app_network
    command:
      - --sslcert
      - /certs/fullchain.pem
      - --sslkey
      - /certs/privkey.pem

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ETC_PROMETHEUS_DATA_DIR:/etc/prometheus
      - PROMETHEUS_DATA_DIR:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    networks:
      - app_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - '9100:9100'
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - GRAFANA_DATA_DIR:/var/lib/grafana
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
